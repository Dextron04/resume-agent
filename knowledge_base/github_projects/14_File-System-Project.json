{
  "metadata": {
    "project_number": 14,
    "total_projects": 25,
    "user_name": "Tushin Kulshreshtha",
    "generated_timestamp": "2025-08-17T14:42:18.603976",
    "generator": "GitHub Portfolio Maker"
  },
  "project": {
    "title": "File-System-Project",
    "summary": "**Project Overview:**\nA custom file system implementation in C that provides a Unix-like shell interface for virtual disk operations. This educational project demonstrates core file system concepts through a practical, interactive shell environment that supports comprehensive file and directory management capabilities.\n\n**Key Features:**\n* Complete file system operations including create, read, write, and delete functionality\n* FAT-based free space management with Volume Control Block (VCB) implementation\n* Cross-system file transfer capabilities between the custom FS and Linux\n* Interactive shell interface with command history and help system\n* Robust directory hierarchy management with full path resolution\n\n**Technologies Used:**\nC, Make, GCC, libreadline, pthread, Docker, FAT file system architecture\n\n**Impact & Benefits:**\nThis project serves as both an educational tool for understanding file system internals and a practical demonstration of low-level system programming concepts. It provides hands-on experience with file system design while offering real-world functionality for file management and storage operations.\n\nThe portfolio summary highlights the project's technical sophistication while remaining accessible to potential employers or collaborators. It emphasizes both the educational value and practical implementation aspects of the file system, showcasing the comprehensive nature of the solution.",
    "raw_summary": "**Project Overview:**\nA custom file system implementation in C that provides a Unix-like shell interface for virtual disk operations. This educational project demonstrates core file system concepts through a practical, interactive shell environment that supports comprehensive file and directory management capabilities.\n\n**Key Features:**\n* Complete file system operations including create, read, write, and delete functionality\n* FAT-based free space management with Volume Control Block (VCB) implementation\n* Cross-system file transfer capabilities between the custom FS and Linux\n* Interactive shell interface with command history and help system\n* Robust directory hierarchy management with full path resolution\n\n**Technologies Used:**\nC, Make, GCC, libreadline, pthread, Docker, FAT file system architecture\n\n**Impact & Benefits:**\nThis project serves as both an educational tool for understanding file system internals and a practical demonstration of low-level system programming concepts. It provides hands-on experience with file system design while offering real-world functionality for file management and storage operations.\n\nThe portfolio summary highlights the project's technical sophistication while remaining accessible to potential employers or collaborators. It emphasizes both the educational value and practical implementation aspects of the file system, showcasing the comprehensive nature of the solution."
  }
}